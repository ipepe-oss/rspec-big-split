#!/bin/env ruby
# frozen_string_literal: true

require "json"

total_workers = ENV.fetch("TEST_NODE_TOTAL", "1").to_i
this_worker_index = ENV.fetch("TEST_NODE_INDEX", "1").to_i

this_worker_index += 1 if ARGV.include?("--add-one-on-test-node-index")

warn "TEST_NODE_TOTAL=#{total_workers}"
warn "TEST_NODE_INDEX=#{this_worker_index}"

raise "TEST_NODE_INDEX must be between 1 and TEST_NODE_TOTAL" unless (1..total_workers).cover?(this_worker_index)

# Load the examples from the JSON file
if ARGV[0]
  path = ARGV[0]
  all_rspec_examples = JSON.parse(File.read(path))["examples"]

  example_paths = {}

  all_rspec_examples.map do |example|
    if example["ci_split_example_groups"] || ARGV.include?("--split-by-example")
      example_paths[example["id"]] ||= []
      example_paths[example["id"]].push example["id"]
    else
      example_paths[example["file_path"]] ||= []
      example_paths[example["file_path"]].push example["id"]
    end
  end

  # Split the examples into groups
  examples_to_run_for_current_worker = []
  example_paths.keys.sort.each_with_index do |example, index|
    next unless ((index % total_workers) + 1) == this_worker_index

    examples_to_run_for_current_worker.concat(
      example_paths[example]
    )
  end
  warn "Suggesting #{examples_to_run_for_current_worker.size}/#{example_paths.size} examples on worker #{this_worker_index}"
  $stdout.puts examples_to_run_for_current_worker
else
  warn "Usage: rspec-big-split <path to JSON file>"
  exit 1
end
